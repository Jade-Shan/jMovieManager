/**
 * Copyright (c) 2010-2015 Bryan Beck.
 * All rights reserved.
 * 
 * This project is licensed under LGPL v2.1.
 * See jMovieManager-license.txt for details.
 * 
 */
package jMovieManager.swing.gui;

import jMovieManager.swing.gui.font.JMMFont;
import jmm.utils.Settings;
import java.awt.Dialog;
import java.awt.Frame;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import jmm.log.Email;
import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.jboss.logging.Logger;

/**
 * GUI to inform the user that there was an unexspected error. <br/>
 * Gives the user the option to report the bug to the developer.
 * 
 * @author Bryan Beck
 * @since 28.11.2012
 */
public class BugReportGUI extends javax.swing.JDialog {
    /** Logger. */
    private static final Logger LOG = LoggerFactory.logger(BugReportGUI.class);
    
    private final ResourceBundle bundle;
    private final Frame parent;
    
    /**
     * Creates new form ReportErrorGUI
     */
    public BugReportGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        bundle = ResourceBundle.getBundle("jMovieManager.swing.resources.MovieManager"); 
        initComponents();
        this.parent = parent;
                
        this.setLocationRelativeTo(parent);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                jButton2ActionPerformed(null);
            }
        });
                
        jButton1.requestFocus();
    }
    
    /**
     * @see Dialog#setVisible(boolean) 
     */
    @Override
    public void setVisible(final boolean visible){
        final BugReportGUI instance = this;
        Thread showUpdateGUI = new Thread(new Runnable() {
            @Override
            public void run() {
                if(visible == true){
                    UpdateGUI searchForUpdates = new UpdateGUI(parent, true);
                    if(searchForUpdates.updateAvailable()){
                        //update instead of bug report
                        jButton1.setEnabled(false);
                        searchForUpdates.setVisible(true);
                        instance.jButton2ActionPerformed(null);
                    }
                }
            }
        });
        showUpdateGUI.start();
        super.setVisible(visible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jMovieManager/swing/resources/MovieManager"); // NOI18N
        setTitle(bundle.getString("BugReportGUI.headline")); // NOI18N
        setMinimumSize(new java.awt.Dimension(550, 350));
        setResizable(false);

        jPanel1.setBackground(ColorInterface.list_tree_Background);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, ColorInterface.list_tree_BorderShadow));
        jPanel1.setMinimumSize(new java.awt.Dimension(550, 315));

        jLabel1.setFont(JMMFont.labelFont);
        jLabel1.setForeground(ColorInterface.textareaForeground);
        jLabel1.setText(bundle.getString("BugReportGUI.jLabel1")); // NOI18N

        jLabel2.setText(bundle.getString("BugReportGUI.jLabel2")); // NOI18N

        jLabel3.setText(bundle.getString("BugReportGUI.jLabel3")); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setForeground(ColorInterface.darkText);
        jTextArea1.setRows(5);
        jTextArea1.setText(bundle.getString("BugReportGUI.jTextArea1")); // NOI18N
        jTextArea1.setToolTipText("");
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextArea1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jCheckBox1.setText(bundle.getString("BugReportGUI.jCheckBox1")); // NOI18N
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jTextField1.setText(bundle.getString("BugReportGUI.jTextField1")); // NOI18N
        jTextField1.setEnabled(false);
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jTextField1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel3)))
                                .addGap(0, 88, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 35));
        jPanel2.setMinimumSize(new java.awt.Dimension(210, 35));
        jPanel2.setPreferredSize(new java.awt.Dimension(210, 35));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 6));

        jButton2.setText(bundle.getString("BugReportGUI.jButton2")); // NOI18N
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setMaximumSize(new java.awt.Dimension(90, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(90, 23));
        jButton2.setPreferredSize(new java.awt.Dimension(90, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton1.setText(bundle.getString("BugReportGUI.jButton1")); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setMaximumSize(new java.awt.Dimension(90, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(90, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(90, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * jButton2 - Close <br/>
     * Disposes the GUI
     * 
     * @param evt the triggered event
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

//    /**
//     * External acces to send a bug report automatically
//     */
//    public void sendBugReport(){
//        jButton1ActionPerformed(null);
//    }
    
    /**
     * jButton1 - Send Bug <br/>
     * Reports the bug to the developers
     * 
     * @param evt the triggered event
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        StringBuilder sb = new StringBuilder("Dies ist ein Bug Report.");
        if(jCheckBox1.isEnabled()){
            String customEmailAddress = jTextField1.getText();
            //TODO: validate custom email address
            sb.append("\n\nE-Mail Adresse des Nutzers: ").append(customEmailAddress);
        }
        sb.append("\n\nFreitext des Nutzers: ");
        if(!jTextArea1.getText().equalsIgnoreCase(bundle.getString("BugReportGUI.jTextArea1"))){
            sb.append("\n").append(jTextArea1.getText());
        }
        Email email = new Email(Settings.emailFrom, Settings.emailTo, "Bug Report", sb.toString(), new String[]{Settings.getInstance().getLogFile()});
        if(!email.send()){
            javax.swing.JOptionPane.showMessageDialog(this, 
                    bundle.getString("BugReportGUI.error.send"), 
                    bundle.getString("BugReportGUI.error.send.headline"), 
                    JOptionPane.ERROR_MESSAGE);          
        }
        Settings.getInstance().setNumberOfBugReports(Settings.getInstance().getNumberOfBugReports() +1);
        jButton2ActionPerformed(evt);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * jCheckbox1 - Enable/Disable Email Textfield <br/>
     * Enables or disables the textfield to enter an email address
     * 
     * @param evt the triggered event 
     */
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
            jTextField1.setEnabled(true);
        }else{
            jTextField1.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * jTextArea1 - Remove tip<br/>
     * Removes the displayed tip on focus
     * 
     * @param evt the triggered event 
     */
    private void jTextArea1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusGained
        if(jTextArea1.getText().equalsIgnoreCase(bundle.getString("BugReportGUI.jTextArea1"))){
            jTextArea1.setText("");
            jTextArea1.setForeground(ColorInterface.textareaForeground);
        }
    }//GEN-LAST:event_jTextArea1FocusGained

    /**
     * JTextField1 - Remove tip<br/>
     * Removes the displayed tip on focus
     * 
     * @param evt the triggered event 
     */
    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if(jTextField1.getText().equalsIgnoreCase(bundle.getString("BugReportGUI.jTextField1"))){
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1FocusGained

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
