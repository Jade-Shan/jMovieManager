/**
 * Copyright (c) 2010-2015 Bryan Beck.
 * All rights reserved.
 * 
 * This project is licensed under LGPL v2.1.
 * See jMovieManager-license.txt for details.
 * 
 */
package jMovieManager.swing.gui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.util.LinkedList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.ResourceBundle;
import javax.swing.JDialog;
import javax.swing.UIManager;
import jmm.persist.RunnableImpl;
import jMovieManager.swing.gui.components.MyDisplaySaveElementProgressPanel;
import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.jboss.logging.Logger;

/**
 * Dialog to Display the progress of all save operations
 * 
 * @author Bryan Beck
 * @since 12.11.2012
 */
public class DisplaySaveProgressGUI extends javax.swing.JDialog implements Observer{
    /** Logger. */
    private static final Logger LOG = LoggerFactory.logger(DisplaySaveProgressGUI.class);
    
    private ResourceBundle bundle;
    private List<Thread> threadList;
    private boolean isExpanded;
    
    private int totalFinishes;
    private int finishes;
    
    /**
     * Creates new form SaveProgressGUI
     * 
     * @param totalFinishes The number of total tasks elements (requiered for progressbar updates)
     * @see JDialog#JDialog(java.awt.Frame, boolean)
     */
    public DisplaySaveProgressGUI(java.awt.Frame parent, boolean modal, int totalFinishes) {
        super(parent, modal);
        initComponents();
        bundle = ResourceBundle.getBundle("jMovieManager.swing.resources.MovieManager");
        isExpanded = false;
        if(totalFinishes > 0){
            this.totalFinishes = totalFinishes;
        }else{
            this.totalFinishes = 1;
        }
        
        this.setLocationRelativeTo(parent);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                jButton1ActionPerformed(null);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel4.setMaximumSize(new java.awt.Dimension(10, 32767));
        jPanel4.setMinimumSize(new java.awt.Dimension(10, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(10, 270));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        jPanel5.setMaximumSize(new java.awt.Dimension(10, 32767));
        jPanel5.setMinimumSize(new java.awt.Dimension(10, 100));
        jPanel5.setPreferredSize(new java.awt.Dimension(10, 270));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jMovieManager/swing/resources/MovieManager"); // NOI18N
        setTitle(bundle.getString("SaveProgressGUI.headline")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setMinimumSize(new java.awt.Dimension(550, 150));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setMinimumSize(new java.awt.Dimension(530, 140));
        jPanel1.setPreferredSize(new java.awt.Dimension(530, 140));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 40));
        jPanel2.setMinimumSize(new java.awt.Dimension(530, 40));
        jPanel2.setPreferredSize(new java.awt.Dimension(530, 40));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 8));

        jButton1.setText(bundle.getString("SaveProgressGUI.jButton1")); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText(bundle.getString("SaveProgressGUI.jButton2.expand")); // NOI18N
        jButton2.setEnabled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton2.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel3.setMinimumSize(new java.awt.Dimension(530, 100));
        jPanel3.setPreferredSize(new java.awt.Dimension(530, 100));

        jLabel1.setText(bundle.getString("SaveProgressGUI.jLabel1")); // NOI18N

        jLabel2.setIcon(UIManager.getIcon("OptionPane.informationIcon"));
        jLabel2.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel2.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel2.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * jButton1 - Cancel Save Process <br/>
     * Interrupt all save processes and disposes the GUI
     * 
     * @param evt the triggered event
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for(Thread process: threadList){
            process.interrupt();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * jButton2 - Show save details<br/>
     * Expand or collapse the save process view 
     * 
     * @param evt the triggered event
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!isExpanded){
            BorderLayout layout = (BorderLayout)jPanel1.getLayout();
            layout.addLayoutComponent(jPanel4, BorderLayout.WEST);
            layout.addLayoutComponent(jPanel5, BorderLayout.EAST);
            layout.addLayoutComponent(jPanel6, BorderLayout.CENTER);
            this.setMinimumSize(new Dimension(550, 360));
            this.setPreferredSize(new Dimension(550, 360));
//            jPanel1.setPreferredSize(new Dimension(530, 360));
            jButton2.setText(bundle.getString("SaveProgressGUI.jButton2.collapse"));
            this.pack();
            isExpanded = true; 
        }else{
            BorderLayout layout = (BorderLayout)jPanel1.getLayout();
            Component centerComp = layout.getLayoutComponent(BorderLayout.CENTER);
            Component westComp = layout.getLayoutComponent(BorderLayout.WEST);
            Component eastComp = layout.getLayoutComponent(BorderLayout.EAST);  
            layout.removeLayoutComponent(centerComp);
            layout.removeLayoutComponent(westComp);
            layout.removeLayoutComponent(eastComp);
            this.setMinimumSize(new Dimension(550, 150));
            this.setPreferredSize(new Dimension(550, 150));
//            jPanel1.setPreferredSize(new Dimension(530, 140));
            jButton2.setText(bundle.getString("SaveProgressGUI.jButton2.expand"));
            this.pack();
            isExpanded = false;            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Updates the overall progress bar
     * @see Observer#update(java.util.Observable, java.lang.Object) 
     */
    @Override
    public void update(Observable o, Object arg) {
        finishes ++;
        jProgressBar1.setValue(((int)(((double)finishes/(double)totalFinishes)*100)));
    }
    
    /**
     * adds a saveProcress to the GUI
     * @param process The process to add
     */
    private void addSaveProcess(Thread process){
        MyDisplaySaveElementProgressPanel panel = new MyDisplaySaveElementProgressPanel(process, null, null, null, null);
        jPanel6.add(panel);
        
//        panel.startProcess(); 
    }
    
    /**
     * Sets the runnable list and adds each runnable the gui as observer
     * @param runnableList The list of runnable tasks
     */
    public void setRunnableList(final List<RunnableImpl> runnableList){
        threadList = new LinkedList<Thread>();
        for(RunnableImpl task: runnableList){
            task.addObserver(this);
            Thread runProcess = new Thread(task);
            threadList.add(runProcess);
//          addSaveProcess(runProcess);
        }
    }
    
    /**
     * Shows the GUI and starts the save process
     * 
     */
    public void showAndStart(){
        finishes = 0;
        Thread runThreadsAndDispose = new Thread(new Runnable() {
            @Override
            public void run() {
                //Starte alle Threads
                for(Thread process: threadList){
                    process.start();
                }
                //Warte bis alle Threads abgeschlossen sind
                for(Thread process: threadList){
                    try {
                        process.join();
                        LOG.debug("Thread " + process.getName() + " finished.");
                    } catch (InterruptedException ex) {
                        LOG.error("Thread could not be joined.", ex);
                    }
                }   
                dispose();
            }
        });
        runThreadsAndDispose.start();
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
