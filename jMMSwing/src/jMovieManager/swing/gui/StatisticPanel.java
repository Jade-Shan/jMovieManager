/**
 * Copyright (c) 2010-2015 Bryan Beck.
 * All rights reserved.
 * 
 * This project is licensed under LGPL v2.1.
 * See jMovieManager-license.txt for details.
 * 
 */
package jMovieManager.swing.gui;

import java.awt.Cursor;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.Iterator;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.SortedMap;
import java.util.TreeMap;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import jmm.data.collection.MediaCollection;
import jmm.data.collection.MovieCollection;
import jmm.data.collection.SerieCollection;
import jmm.utils.FileStatistic;
import jmm.utils.LocaleManager;
import jmm.utils.MapSort;
import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.jboss.logging.Logger;

/**
 * A Statistic Panel for one collection
 * 
 * @author Bryan Beck
 * @since 10.10.2012
 */
public class StatisticPanel extends javax.swing.JPanel implements ColorInterface{
    /** Logger. */
    private static final Logger LOG = LoggerFactory.logger(StatisticPanel.class);
    
    //TODO: Statistic Panels mit Tabelle ersetzen, um mehr als 10 Eintr√§ge anzuzeigen
    private ResourceBundle bundle;   
    private ResourceBundle genreKeyAndCodecBundle;
    private MediaCollection collection;
    private FileStatistic fileStatistic;
    
    private boolean alreadyGenerated;
       
    /**
     * Creates new form StatisticPanel
     */
    public StatisticPanel(MediaCollection collection) {
        bundle = ResourceBundle.getBundle("jMovieManager.swing.resources.MovieManager");
        genreKeyAndCodecBundle = LocaleManager.getInstance().getGenreKeyAndCodecBundle();
        this.collection = collection;
        initComponents();
        
        if(collection instanceof SerieCollection){
            jLabel1.setText(bundle.getString("StatisticGUI.jLabel1.Serie"));
            jLabel22.setText(bundle.getString("StatisticGUI.jLabel22.Serie"));
        }
//        ((TitledBorder)jPanel18.getBorder()).setTitleFont(JMMFont.smallBorderFont);
//        ((TitledBorder)jPanel13.getBorder()).setTitleFont(JMMFont.smallBorderFont);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(650, 260));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(300, 200));
        jPanel1.setPreferredSize(new java.awt.Dimension(650, 260));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel11.setMinimumSize(new java.awt.Dimension(600, 255));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        jPanel19.setMaximumSize(new java.awt.Dimension(10, 32767));
        jPanel19.setMinimumSize(new java.awt.Dimension(10, 255));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel19);

        jPanel8.setMaximumSize(new java.awt.Dimension(260, 32767));
        jPanel8.setMinimumSize(new java.awt.Dimension(260, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(260, 255));
        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.PAGE_AXIS));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jMovieManager/swing/resources/MovieManager"); // NOI18N
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, ColorInterface.list_tree_BorderShadow), bundle.getString("StatisticGUI.jLabel21"))); // NOI18N
        jPanel18.setLayout(new javax.swing.BoxLayout(jPanel18, javax.swing.BoxLayout.LINE_AXIS));

        jPanel15.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        jPanel15.setLayout(new java.awt.GridLayout(4, 2));

        jLabel1.setText(bundle.getString("StatisticGUI.jLabel1.Movie")); // NOI18N
        jPanel15.add(jLabel1);
        jPanel15.add(jLabel12);

        jLabel22.setText(bundle.getString("StatisticGUI.jLabel22")); // NOI18N
        jPanel15.add(jLabel22);
        jPanel15.add(jLabel23);

        jLabel3.setText(bundle.getString("StatisticGUI.jLabel3")); // NOI18N
        jPanel15.add(jLabel3);
        jPanel15.add(jLabel13);

        jLabel10.setText(bundle.getString("StatisticGUI.jLabel10")); // NOI18N
        jPanel15.add(jLabel10);
        jPanel15.add(jLabel14);

        jPanel18.add(jPanel15);

        jPanel8.add(jPanel18);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, ColorInterface.list_tree_BorderShadow), bundle.getString("StatisticGUI.jLabel20"))); // NOI18N
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        jPanel12.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        jPanel12.setLayout(new java.awt.GridLayout(6, 2));

        jLabel2.setText(bundle.getString("StatisticGUI.jLabel2")); // NOI18N
        jPanel12.add(jLabel2);
        jPanel12.add(jLabel15);

        jLabel7.setText(bundle.getString("StatisticGUI.jLabel7")); // NOI18N
        jPanel12.add(jLabel7);
        jPanel12.add(jLabel16);

        jLabel8.setText(bundle.getString("StatisticGUI.jLabel8")); // NOI18N
        jPanel12.add(jLabel8);
        jPanel12.add(jLabel17);

        jLabel11.setText(bundle.getString("StatisticGUI.jLabel11")); // NOI18N
        jPanel12.add(jLabel11);
        jPanel12.add(jLabel18);

        jLabel9.setText(bundle.getString("StatisticGUI.jLabel9")); // NOI18N
        jPanel12.add(jLabel9);
        jPanel12.add(jLabel19);

        jLabel24.setText(bundle.getString("StatisticGUI.jLabel24")); // NOI18N
        jPanel12.add(jLabel24);

        jLabel4.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(40, 14));
        jPanel12.add(jLabel4);

        jPanel13.add(jPanel12);

        jPanel8.add(jPanel13);

        jPanel11.add(jPanel8);

        jPanel21.setMaximumSize(new java.awt.Dimension(10, 32767));
        jPanel21.setMinimumSize(new java.awt.Dimension(10, 255));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel21);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(100, 255));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(310, 255));

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(11, 1));

        jPanel9.setOpaque(false);
        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));
        jPanel4.add(jPanel9);

        jTabbedPane1.addTab(bundle.getString("StatisticPanel.jPanel4"), jPanel4); // NOI18N

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new java.awt.GridLayout(11, 1));

        jPanel17.setOpaque(false);
        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));
        jPanel7.add(jPanel17);

        jTabbedPane1.addTab(bundle.getString("StatisticPanel.jPanel7"), jPanel7); // NOI18N

        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(140, 324));
        jPanel5.setLayout(new java.awt.GridLayout(11, 1));

        jPanel14.setOpaque(false);
        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));
        jPanel5.add(jPanel14);

        jTabbedPane1.addTab(bundle.getString("StatisticPanel.jPanel5"), jPanel5); // NOI18N

        jPanel6.setOpaque(false);
        jPanel6.setLayout(new java.awt.GridLayout(11, 1));

        jPanel10.setOpaque(false);
        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));
        jPanel6.add(jPanel10);

        jTabbedPane1.addTab(bundle.getString("StatisticPanel.jPanel6"), jPanel6); // NOI18N

        jPanel11.add(jTabbedPane1);

        jPanel20.setMaximumSize(new java.awt.Dimension(10, 32767));
        jPanel20.setMinimumSize(new java.awt.Dimension(10, 255));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel20);

        jPanel1.add(jPanel11, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @return the alreadyGenerated
     */
    public boolean isAlreadyGenerated() {
        return alreadyGenerated;
    }

     /**
    * Methode welche einen neuen Thread ausf√ºhrt und
    * eine Statistik √ºber alle Filmobjekte erstellt
    */
    public void generateFileStatistic(){
        fileStatistic = new FileStatistic();
        fileStatistic.generateFileStatistic(collection);
        this.updateGUI(fileStatistic);
        alreadyGenerated = true;
    }
    
    /**
    * Schreibt die Werter der Statistik auf die GUI Elemente
    */
    private void updateGUI(FileStatistic fileInstance){
        DecimalFormat sizeFormatter =   new DecimalFormat  ( "####0.00" );
        DecimalFormat ratingFormatter =   new DecimalFormat  ( "#0.0" );

        jLabel12.setText(String.valueOf(fileInstance.getTotalMediaFiles()));
        jLabel23.setText(String.valueOf(fileInstance.getTotalFiles()));
        jLabel13.setText(sizeFormatter.format(fileInstance.getTotalFileSizeInMByte()/1024) + " GB");
        jLabel14.setText(sizeFormatter.format(fileInstance.getTotalPlaytime()) + " min");
        jLabel15.setText(sizeFormatter.format(fileInstance.getAverageFileSizeInMByte()/1024) + " GB");
        jLabel16.setText(String.valueOf(fileInstance.getAverageVideoBitrate()) + " kbps");
        jLabel17.setText(String.valueOf(fileInstance.getAverageAudioBitrate()) + " kbps");
        jLabel18.setText(sizeFormatter.format(fileInstance.getAveragePlaytime()) + " min");
        jLabel19.setText(ratingFormatter.format(fileInstance.getAverageImdbRating()) + "/10");
        jLabel4.setText(ratingFormatter.format(fileInstance.getAveragePersonalRating()) + "/10");
        
        //Dateiendung
        this.updatePanelProgressBars(jPanel5, fileInstance.getDifferentFileEnding(), fileInstance.getTotalFiles());
        //Genres
        this.updatePanelProgressBars(jPanel4, fileInstance.getDifferentGenres(), fileInstance.getTotalMediaFiles());
        //Source
        if(collection instanceof MovieCollection){
            this.updatePanelProgressBars(jPanel6, fileInstance.getDifferentSources(), fileInstance.getTotalMediaFiles());
        }
        else if(collection instanceof SerieCollection){
            this.updatePanelProgressBars(jPanel6, fileInstance.getDifferentSources(), fileInstance.getTotalFiles());
        }
        //Actors
        this.updatePanelProgressBars(jPanel7, fileInstance.getDifferentActors(), fileInstance.getTotalMediaFiles());
        this.repaint();
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    /** 
    * Aktualisiert das Zeilendiagramm eines Tabs. Es wird absteigend sortiert, beginnend mit dem h√§ufigsten
    * @param panelToUpdate Panel auf dem sich das Diagramm befinden soll
    * @param progressBarEntries Map<String, Integer>, welche die vorgekommene Anzahl der Keys beinhaltet
    * @param divisor Teiler, um den Prozentwert einzelner Values herraus zu bekommen. Muss gr√∂√üer sein als 0!
    */
    private void updatePanelProgressBars(JPanel panelToUpdate, Map<String, Integer> progressBarEntries, int divisor){
        Double count;
        String key;
        String value;
        int progressBar_xSize;
  
        DecimalFormat doubleFormatter =   new DecimalFormat  ( "00.00" );

        //Sortiere Absteigend alle Values der Hashmap
        TreeMap sortedTreeMap = new TreeMap(new MapSort.ValueComparer<String, Integer>(progressBarEntries));
        SortedMap sortedData = sortedTreeMap;

        //F√ºge die Hashmap Keys hinzu
        sortedData.putAll(progressBarEntries);
        Iterator<String> iter = sortedData.keySet().iterator();
        int i = 0;

        while(iter.hasNext() && i < 10){
            key = iter.next();
            value = sortedData.get(key).toString().trim();
            if(value != null){
                    count =  Double.valueOf(value);               

                if(divisor > 0){
                    progressBar_xSize = (int)((count/divisor)*100);
                    value = doubleFormatter.format((count/divisor)*100) + "%";
                }
                else{
                    progressBar_xSize = 0;
                    value = "0%";
                }

                //JPanel
                JPanel row = new JPanel();
                row.setLayout(new javax.swing.BoxLayout(row, javax.swing.BoxLayout.LINE_AXIS));
                row.setOpaque(false);


                JPanel space = new JPanel();
                space.setOpaque(false);
                space.setMaximumSize(new Dimension(10, 15));
                space.setMinimumSize(new Dimension(10, 15));
                space.setPreferredSize(new Dimension(10, 15));
                row.add(space);

                //JLabel f√ºr den Key
                JLabel textLabel = new JLabel();
                textLabel.setFont(new java.awt.Font("Tahoma", 0, 10));

                if(genreKeyAndCodecBundle.containsKey(key)){
                    textLabel.setText(genreKeyAndCodecBundle.getString(key));
                }else{
                    textLabel.setText(key);
                }
                //textLabel.setMaximumSize(new java.awt.Dimension(70, 15));   //30 file ending, 100 bei actors
                textLabel.setMaximumSize(new java.awt.Dimension(120, 15));
                textLabel.setMinimumSize(new java.awt.Dimension(80, 15));
                textLabel.setPreferredSize(new java.awt.Dimension(80, 15));
                row.add(textLabel);

                //JProgressBar
                JProgressBar progressBar = new JProgressBar();
                progressBar.setMaximumSize(new java.awt.Dimension(1500, 15));
                progressBar.setPreferredSize(new Dimension(210, 15));
                progressBar.setValue(progressBar_xSize);


                //alternative ProgressBar                                               
    //            JPanel space3 = new JPanel();
    //            JProgressBar progressBar = new JProgressBar();
    //            progressBar.setMaximumSize(new java.awt.Dimension(32767, 15));
    //            progressBar.setMinimumSize(new java.awt.Dimension(1, 1));
    //            if(progressBar_xSize > 0){
    //                progressBar.setPreferredSize(new Dimension(progressBar_xSize, 15));
    //                space3.setMaximumSize(new Dimension(105-progressBar_xSize, 15));
    //                space3.setMinimumSize(new Dimension(105-progressBar_xSize, 15));
    //                space3.setPreferredSize(new Dimension(105-progressBar_xSize, 15));
    //            }else{
    //                progressBar.setPreferredSize(new Dimension(1, 15));
    //                space3.setMaximumSize(new Dimension(104, 15));
    //                space3.setMinimumSize(new Dimension(104, 15));
    //                space3.setPreferredSize(new Dimension(104, 15));
    //            }


                progressBar.setToolTipText(value);
                row.add(progressBar);

                JPanel space2 = new JPanel();
                space2.setOpaque(false);
                space2.setMaximumSize(new Dimension(10, 15));
                space2.setMinimumSize(new Dimension(10, 15));
                space2.setPreferredSize(new Dimension(10, 15));
                row.add(space2);

                //JLabel f√ºr die %-Zahl hinter der jProgressBar
                JLabel percentage = new JLabel();
                percentage.setFont(new java.awt.Font("Tahoma", 0, 10));
                percentage.setText(value);
                percentage.setMaximumSize(new java.awt.Dimension(50, 15));
                percentage.setMinimumSize(new java.awt.Dimension(50, 15));
                percentage.setPreferredSize(new java.awt.Dimension(50, 15));
                row.add(percentage);

                //alternative Progressbar
                //row.add(space3);

                panelToUpdate.add(row);
                i++;
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
