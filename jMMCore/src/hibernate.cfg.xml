<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2010, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <!--<property name="hibernate.bytecode.use_reflection_optimizer">false</property>-->
        <!-- Database connection settings -->
        <!--<property name="connection.driver_class">org.h2.Driver</property>-->
        <property name="connection.driver_class">org.hsqldb.jdbcDriver</property>
        <!--<property name="connection.url">jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE</property>-->
        <property name="connection.url">jdbc:hsqldb:hsql://localhost/jmm</property>
        <property name="connection.username">sa</property>
        <property name="connection.password"></property>
<!--	<property name="hibernate.default_schema">PUBLIC</property>-->
		
        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>

        <!-- SQL dialect -->
        <!--<property name="dialect">org.hibernate.dialect.H2Dialect</property>-->
	<property name="dialect">org.hibernate.dialect.HSQLDialect</property>
        <!-- Enable Hibernate's automatic session context management -->
        <property name="current_session_context_class">thread</property>
        <!-- Disable the second-level cache  -->
        <property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>

		<!-- Connection Pool c3p0 konfigurieren -->
		<!--
		<property name="hibernate.c3p0.min_size">5</property>
		<property name="hibernate.c3p0.max_size">20</property>
		<property name="hibernate.c3p0.timeout">300</property>
		<property name="hibernate.c3p0.max_statements">50</property>
		<property name="hibernate.c3p0.idle_test_period">3000</property>
		-->
		
        <!-- Echo all executed SQL to stdout -->
        <property name="show_sql">false</property>
	<!--<property name="format_sql">true</property>-->

        <!-- Drop and re-create the database schema on startup -->
		<!--(validate, update, create, create-drop) -->
        <!-- <property name="hbm2ddl.auto">create-drop</property> -->
      <!-- <property name="hbm2ddl.auto">update</property> -->
        <!-- Names the annotated entity class -->
		<mapping class="jmm.data.collection.MediaCollection" />
		<mapping class="jmm.data.collection.MovieCollection" />
		<mapping class="jmm.data.collection.SerieCollection" />
		<mapping class="jmm.data.MediaFile" />
		<mapping class="jmm.data.VideoFile" />
		<mapping class="jmm.data.LocalVideoFile" />
		<mapping class="jmm.data.PhysicalVideoFile" />
		<mapping class="jmm.data.Song" />
		<mapping class="jmm.data.Movie" />
		<mapping class="jmm.data.Serie" />
		<mapping class="jmm.data.Season" />
		<mapping class="jmm.data.Episode" />
		<mapping class="jmm.data.Actor" /> 
    </session-factory>
</hibernate-configuration>